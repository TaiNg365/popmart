name: Build and Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies (Ubuntu and macOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          pip install pywin32==306

      - name: List all files and their paths
        run: find . -type f

      - name: Show current directory
        run: pwd

      - name: List files in current directory
        run: ls -al

      - name: Verify gui.spec exists
        run: |
          if [ -f gui.spec ]; then echo "gui.spec found"; else echo "gui.spec not found"; fi

      - name: Build executable on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: pyinstaller gui.spec

      - name: Build executable on macOS
        if: matrix.os == 'macos-latest'
        run: pyinstaller gui.spec

      - name: Build executable on Windows
        if: matrix.os == 'windows-latest'
        run: pyinstaller gui.spec

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-${{ matrix.os }}
          path: dist/
